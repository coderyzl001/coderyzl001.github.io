<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>错了就要认，挨打要立正</title>
      <link href="/2022/07/24/%E9%94%99%E4%BA%86%E5%B0%B1%E8%A6%81%E8%AE%A4%EF%BC%8C%E6%8C%A8%E6%89%93%E8%A6%81%E7%AB%8B%E6%AD%A3/"/>
      <url>/2022/07/24/%E9%94%99%E4%BA%86%E5%B0%B1%E8%A6%81%E8%AE%A4%EF%BC%8C%E6%8C%A8%E6%89%93%E8%A6%81%E7%AB%8B%E6%AD%A3/</url>
      
        <content type="html"><![CDATA[<pre><code>错了就要人挨打要立正。这是王者荣耀里老夫子说的。我觉得这也是人生最应该记住的话之一。就是，不要为了反驳别人的观点而反驳，要学会认可别人说的是对的，同时，错的时候也要坚决指出来。要学会接受，了解，并改正自己。不要做自己都认为事错误的事情。切记，切记，切记。就这，大道至简，没什么需要阐述的，懂得都懂，不懂得，也不需要懂。遗憾的不该是我，有些事情，努力过了就好，没有必要非得要一个结果。其实没有结果或许，本身就是一个重要的结果。判断一个事情的对错。道不同，不相与为谋。不要试图让所有人都理解你，但是，也不要试图让所有人都理解不了你。如果你想做到，那么两个中的任何一个都可以证明你是个大傻逼。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>searchshixian</title>
      <link href="/2022/07/20/searchshixian/"/>
      <url>/2022/07/20/searchshixian/</url>
      
        <content type="html"><![CDATA[<p>  对于一个没有编程基础的孩子，这是一个十分难的事情，所以更要记录，以防自己忘记。<br>来先看</p><p>先看后面的步骤，这是最重要的，我们要<br>编写搜索视图！！！！视图的话实在主题目录文件下的&#x2F;layout&#x2F;_widget&#x2F;创建试视图文件&#x2F;<br>然后编写搜索脚本！！：脚本是在主题目录下的source&#x2F;js&#x2F;创建新的脚本文件<br>然后将视图和脚本联系起来<br>即在主题目录&#x2F;layout&#x2F;_partial&#x2F;footer.ejs  下添加相关代码</p><pre><code>&lt;% if (config.search) &#123; %&gt;&lt;script type=&quot;text/javascript&quot;&gt;          var search_path = &quot;&lt;%= config.search.path %&gt;&quot;;    if (search_path.length == 0) &#123;        search_path = &quot;search.xml&quot;;    &#125;    var path = &quot;&lt;%= config.root %&gt;&quot; + search_path;    searchFunc(path, &#39;local-search-input&#39;, &#39;local-search-result&#39;);&lt;/script&gt;&lt;% &#125; %&gt;&lt;!-- syntax highlighting --&gt;&lt;% if (theme.comment_js) &#123; %&gt;&lt;script&gt;marked.setOptions(&#123;    highlight: function (code, lang) &#123;        return hljs.highlightAuto(code).value;    &#125;&#125;);function Highlighting()&#123;    var markdowns = document.getElementsByClassName(&#39;markdown&#39;);    for(var i=0;i&lt;markdowns.length;i++)&#123;        if(markdowns[i].innerHTML) markdowns[i].innerHTML =marked(markdowns[i].innerHTML);    &#125;&#125;window.addEventListener(&#39;DOMContentLoaded&#39;, Highlighting, false);window.addEventListener(&#39;load&#39;, Highlighting, false);&lt;/script&gt;&lt;% &#125; %&gt; </code></pre><p>添加完成之后，基本上是着最后一步困扰了很长时间，明天考完在补充相关的完整步骤，图片，和整理。</p>]]></content>
      
      
      <categories>
          
          <category> 档案 </category>
          
          <category> 编档 </category>
          
          <category> 2022-7 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>多级分类</title>
      <link href="/2022/07/20/%E5%A4%9A%E7%BA%A7%E5%88%86%E7%B1%BB/"/>
      <url>/2022/07/20/%E5%A4%9A%E7%BA%A7%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>  当你的内容提量越来越大的时候，你可能迫切的需要一个合理的内容分类。</p><p>  而，这一点，我们可以用多级目录来解决。</p><p>  想象一下，这样一个场景，你的其中一个分类是 python ，但是， python 里面包括基础、进阶还与其他。</p><p>  如果都只用一个 python 分类的话，以后会变得越来越庞杂。</p><p>  所以，一级目录是 python 二级目录是 基础、进阶、其他，三级是。。。</p><p>  父子分类</p><p>  这个可以用下面的形式解决</p><pre><code>categories:- python- 模块</code></pre><p>  这样写的形式如下面所示</p><pre><code>python模块</code></pre><p>  要记住，以 - 的分类是父子关系，不是同级关系。</p><p>  同级分类</p><p>  如果要使用同级关系，需要这样</p><pre><code>categories:- [python,模块,PIL]- [python,模块,matplotlib]</code></pre><p>  这样的效果如下</p><pre><code>python模块PILmatplotlib</code></pre><p>  这篇文章同时在 PIL 和 matplotlib 子分类下。</p>]]></content>
      
      
      <categories>
          
          <category> 档案 </category>
          
          <category> 编档 </category>
          
          <category> 2022-7 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/20/hello-world/"/>
      <url>/2022/07/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录</title>
      <link href="/2022/07/17/M2-2022-2-17/"/>
      <url>/2022/07/17/M2-2022-2-17/</url>
      
        <content type="html"><![CDATA[<p>  开始的一个记录：</p><p>  首先，记录的第一点，认识到了英语的重要性，当你看见一个外国的软件几百页的说明书，你却一句也看不懂的时候。我认识到了学习英语的重要性，不是为了什么，只是为了能看懂一个软件。<br>  所以要好好学习英语。<br>  学习英语，现在来看主要有这几个方面：<br>  第一，备考四级，一次过，争取考个好点的分数。</p><p>  第二，莫莫背单词要持之以恒，坚持下去。</p><p>  emmmmm 嗯，目前就这两个</p><p>  然后就是嗯对目前就这些，加油！！！要坚持。</p>]]></content>
      
      
      <categories>
          
          <category> 档案 </category>
          
          <category> 编档 </category>
          
          <category> 开始 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>yuedu</title>
      <link href="/2022/07/16/yuedu/"/>
      <url>/2022/07/16/yuedu/</url>
      
        <content type="html"><![CDATA[<p>先刨个坑  填坑</p><p>还有：http：&#x2F;&#x2F;github.com&#x2F;XIU2&#x2F;Yuedu这是书源地址</p><p>这是来源于开源阅读的一篇文档的指导。</p><p>来源url：<a href="https://mp.weixin.qq.com/s/KPpnPxogVZgUqhOXa4o7kw">https://mp.weixin.qq.com/s/KPpnPxogVZgUqhOXa4o7kw</a></p><p>接下来是我对于这篇指导的自我消化。</p><p>首先，我们需要如下的工具：</p><blockquote><p>1.一个github的账号（注册时间需要超过30天）.</p></blockquote><blockquote><p>2.先留坑：</p></blockquote><p>我们来进行第一步：</p><blockquote><p>1.利用railway网站搭建服务器</p></blockquote><pre><code>railway网站在次不做介绍我们选择登录，登陆时选择连登，用github的账号连登，然后你就可能会可以直接进入下一步但是，有一些人可能会遇到另一种情况，就是网站对你不信任，让你输入一个卡号，这个你不用管他，你让他自己审核一段时间他就自己就好了。反正，我是这样的。如果出现其他情况，我也不知道，换教程吧。菜菜教不了你。</code></pre><blockquote><p> 第二部：进行部署并且修改相关参数</p></blockquote><pre><code>部署的话由于是刚刚使用这个软件，对于图片的使用的不是太熟悉，所以这个先做一个少图版本，，，，，or 无图版本。部署的话，我们进入到相关界面之后进行选择dashboard，进入选择界面这就需要另一小步，我们对一个github的仓库进行克隆，这个应该都会。看时间一会时候更细致的补充。选择界面我们选择对我们克隆的的仓库进行部署部署之后，我们需要对相关参数进行部署，修改variables，，或者也可以说补充三个参数：key                          valueport                         8080reader_app_secure            false接下来是域：接下来是进入到setting对Domains选择设置公开域，网站会自我部署，你就会得到一个相关网址，这个网址，就是我们的阅读网站。</code></pre><blockquote><p>第三步：进行书源的导入</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 档案 </category>
          
          <category> 编档 </category>
          
          <category> 2022-7 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5</title>
      <link href="/2022/07/15/005/"/>
      <url>/2022/07/15/005/</url>
      
        <content type="html"><![CDATA[<pre><code>   这是有关于对 markdown ：   https://blog.soymilk.fun/2019/08/16/Blog/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</code></pre><h2 id="我是二级标题"><a href="#我是二级标题" class="headerlink" title="我是二级标题"></a>我是二级标题</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>4</title>
      <link href="/2022/07/15/004/"/>
      <url>/2022/07/15/004/</url>
      
        <content type="html"><![CDATA[<h1 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h1><p>浅谈一下对于，中国gitee的认识的，中国gitee和外国的github对标的，但是开源情况就tm是个笑话。所以说美国是以自由，民主立国，我们不得不承认确实很强在这方面。他们的民主和自由确实是最为强大的。我们国家，怎么说呢，擅长的不一样吧，欸。</p><h2 id="其次想到之前看到过的一个视频对于美苏冷战的分析吧，美国对于和德国的战争，从来没有想过，会失败。但是在对于苏联时，他们动摇了，他们动摇的原因不是，因为苏联有多强大的，军事实力，而是，苏联的精神意志，说着我们的国家继承了苏联的精神意志，继承了p，现在我们的国家已经和当初的大熊哥，关系，没有什么关系了。当初的苏联，是所有人对于那是一种那个国家的所有人，都认为我们是共产主义。我们平等，平等是苏联最强大的驱动力。无论民族，无论肤色，无论年龄，我们都是平等的。"><a href="#其次想到之前看到过的一个视频对于美苏冷战的分析吧，美国对于和德国的战争，从来没有想过，会失败。但是在对于苏联时，他们动摇了，他们动摇的原因不是，因为苏联有多强大的，军事实力，而是，苏联的精神意志，说着我们的国家继承了苏联的精神意志，继承了p，现在我们的国家已经和当初的大熊哥，关系，没有什么关系了。当初的苏联，是所有人对于那是一种那个国家的所有人，都认为我们是共产主义。我们平等，平等是苏联最强大的驱动力。无论民族，无论肤色，无论年龄，我们都是平等的。" class="headerlink" title="其次想到之前看到过的一个视频对于美苏冷战的分析吧，美国对于和德国的战争，从来没有想过，会失败。但是在对于苏联时，他们动摇了，他们动摇的原因不是，因为苏联有多强大的，军事实力，而是，苏联的精神意志，说着我们的国家继承了苏联的精神意志，继承了p，现在我们的国家已经和当初的大熊哥，关系，没有什么关系了。当初的苏联，是所有人对于那是一种那个国家的所有人，都认为我们是共产主义。我们平等，平等是苏联最强大的驱动力。无论民族，无论肤色，无论年龄，我们都是平等的。"></a>其次想到之前看到过的一个视频对于美苏冷战的分析吧，美国对于和德国的战争，从来没有想过，会失败。但是在对于苏联时，他们动摇了，他们动摇的原因不是，因为苏联有多强大的，军事实力，而是，苏联的精神意志，说着我们的国家继承了苏联的精神意志，继承了p，现在我们的国家已经和当初的大熊哥，关系，没有什么关系了。当初的苏联，是所有人对于那是一种那个国家的所有人，都认为我们是共产主义。我们平等，平等是苏联最强大的驱动力。无论民族，无论肤色，无论年龄，我们都是平等的。</h2><h1 id="再来看"><a href="#再来看" class="headerlink" title="再来看"></a>再来看</h1><p>与其说，是国家之间的战争，不如说是意识形态的斗争。<br> emooooooooo，我想说的就是这些。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3</title>
      <link href="/2022/07/15/003/"/>
      <url>/2022/07/15/003/</url>
      
        <content type="html"><![CDATA[<p>123</p><blockquote><p>1<br>! <a href=""></a></p></blockquote><p>下面文章来源于：<a href="https://blog.csdn.net/weixin_44861399/article/details/104936907">https://blog.csdn.net/weixin_44861399/article/details/104936907</a></p><p>一、本地配置<br>由于是在个人电脑上配置的hexo，部署也不方便，如果在另外一台机子上写博客，没有hexo的配置也不行，另一方面出于备份项目的目的，最好的办法是将本地hexo站点备份到Github上。<br>新建hexo文件夹存放分支工作目录。<br>mkdir hexo<br>1<br>把你的GitHub的远程仓库克隆到hexo文件夹<br>git clone <a href="https://github.com/DAQ121/DAQ121.github.io">https://github.com/DAQ121/DAQ121.github.io</a> hexo<br>1<br>删除除了版本管理的.git之外的所有文件和文件夹<br>cd hexo<br>rm -r *<br>1<br>2<br>把要备份的文件复制到hexo目录<br>scaffolds&#x2F;<br>source&#x2F;<br>themes&#x2F;<br>.gitignore<br>_config.yml<br>package.json<br>1<br>2<br>3<br>4<br>5<br>6<br>如果使用的主题是从Github克隆的，那么使用命令删除它的Git文件（以next主题为例）,否则无法将主题文件push<br>rm -R themes&#x2F;next&#x2F;.git*<br>1<br>二、github配置<br>github创建一个hexo分支<br>git checkout -b hexo<br>1<br>保存所有文件到暂存区<br>git add –all<br>1<br>提交变更<br>git commit -m “创建hexo分支”<br>1<br>推送到github，并用–set-upstream与origin创建关联，将hexo设置为默认分支<br>git push –set-upstream origin hexo<br>1<br>三、合并管理<br>现在有两个需要管理的文件夹，一个是blog，一个是hexo，但是每次发布文章的时候如果要提交两次就很失效率，<br>将本地hexo分支中的.git文件夹复制到blog根目录中<br>cp -a .git ..&#x2F;blog<br>1<br>master分支的文件则由hexo管理，编辑hexo配置文件_config.yml<br>deploy:<br>   type: git<br>   repo: <a href="https://github.com/DAQ121/DAQ121.github.io">https://github.com/DAQ121/DAQ121.github.io</a><br>   branch: master<br>1<br>2<br>3<br>4<br>四、发布文章<br>新建文章<br>hexo new test<br>1<br>将相关更改推送到hexo分支<br>git add .<br>git commit -m “发表文章test”<br>git push origin hexo<br>1<br>2<br>3<br>将静态文件推送到master分支<br>hexo clean<br>hexo d -g<br>1<br>2<br>五、使用的时候如何迁移<br>将hexo分支克隆下来<br>git clone -b hexo <a href="http://github.com/DAQ121/DAQ121.github.io">http://github.com/DAQ121/DAQ121.github.io</a><br>1<br>安装hexo依赖<br>cnpm install<br>1<br>只不过每次发文章的时候，要输入用户名和密码。<br>————————————————<br>版权声明：本文为CSDN博主「盒子里的反派」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_44861399/article/details/104936907">https://blog.csdn.net/weixin_44861399/article/details/104936907</a></p>]]></content>
      
      
      <categories>
          
          <category> 升级 </category>
          
          <category> 基本生活能力 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2</title>
      <link href="/2022/07/15/002/"/>
      <url>/2022/07/15/002/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 升级 </category>
          
          <category> 自我管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1</title>
      <link href="/2022/07/15/001/"/>
      <url>/2022/07/15/001/</url>
      
        <content type="html"><![CDATA[<pre><code>这是暂且定于8月5日到8月15日的计划计划分为两部分，一部分是数学建模的论文学习，另一部分是英语四级的作文，阅读和听力的学习。计划具体内容会具体完善。</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
